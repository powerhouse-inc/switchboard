{
  "version": 3,
  "sources": ["../../wundergraph.config.ts", "../../wundergraph.server.ts", "../../wundergraph.operations.ts"],
  "sourcesContent": ["import { configureWunderGraphApplication, cors, EnvironmentVariable, introspect, templates } from '@wundergraph/sdk';\nimport server from './wundergraph.server';\nimport operations from './wundergraph.operations';\n\nconst ecosystem = introspect.graphql({\n\tapiNamespace: 'ecosystem',\n\turl: 'http://localhost:4000/graphql',\n});\n\nconst switchboard = introspect.graphql({\n\tapiNamespace: 'asdf',\n\turl: process.env.SWITCHBOARD_URL || 'http://localhost:3001/graphql',\n  headers: (builder) => builder.addClientRequestHeader('Authorization', 'Authorization')\n});\n\n// configureWunderGraph emits the configuration\nconfigureWunderGraphApplication({\n\tapis: [switchboard, ecosystem],\n\tserver,\n\toperations,\n\tgenerate: {\n\t\tcodeGenerators: [],\n\t},\n\tcors: {\n\t\t...cors.allowAll,\n\t\tallowedOrigins:\n\t\t\tprocess.env.NODE_ENV === 'production'\n\t\t\t\t? [\n\t\t\t\t\t\t// change this before deploying to production to the actual domain where you're deploying your app\n\t\t\t\t\t\t'http://localhost:3000/',\n\t\t\t\t\t\t'http://localhost:3001/',\n\t\t\t\t\t\t'http://localhost:4000/',\n\t\t\t\t  ]\n\t\t\t\t: ['http://localhost:3000/','http://localhost:3001/', \t\t\t\t\t\t'http://localhost:4000/', new EnvironmentVariable('WG_ALLOWED_ORIGIN')],\n\t},\n\tsecurity: {\n\t\tenableGraphQLEndpoint: true,\n\t},\n});\n", "import { configureWunderGraphServer } from '@wundergraph/sdk/server';\n\nexport default configureWunderGraphServer(() => ({\n\thooks: {\n\t\tqueries: {\n\t\t\tCountries: {\n\t\t\t\tpreResolve: async ({ operations }) => {},\n\t\t\t},\n\t\t},\n\t\tmutations: {},\n\t},\n}));\n", "import { configureWunderGraphOperations } from '@wundergraph/sdk';\nimport type { OperationsConfiguration } from './generated/wundergraph.operations';\n\nexport default configureWunderGraphOperations<OperationsConfiguration>({\n\toperations: {\n\t\tdefaultConfig: {\n\t\t\tauthentication: {\n\t\t\t\trequired: false,\n\t\t\t},\n\t\t},\n\t\tqueries: (config) => ({\n\t\t\t...config,\n\t\t\tcaching: {\n\t\t\t\tenable: false,\n\t\t\t\tstaleWhileRevalidate: 60,\n\t\t\t\tmaxAge: 60,\n\t\t\t\tpublic: true,\n\t\t\t},\n\t\t\tliveQuery: {\n\t\t\t\tenable: true,\n\t\t\t\tpollingIntervalSeconds: 1,\n\t\t\t},\n\t\t}),\n\t\tmutations: (config) => ({\n\t\t\t...config,\n\t\t}),\n\t\tsubscriptions: (config) => ({\n\t\t\t...config,\n\t\t}),\n\t\tcustom: {},\n\t},\n});\n"],
  "mappings": ";AAAA,IAAAA,cAAkG;;;ACAlG,oBAA2C;AAE3C,IAAO,iCAAQ,0CAA2B,OAAO;AAAA,EAChD,OAAO;AAAA,IACN,SAAS;AAAA,MACR,WAAW;AAAA,QACV,YAAY,OAAO,EAAE,WAAW,MAAM;AAAA,QAAC;AAAA,MACxC;AAAA,IACD;AAAA,IACA,WAAW,CAAC;AAAA,EACb;AACD,EAAE;;;ACXF,iBAA+C;AAG/C,IAAO,qCAAQ,2CAAwD;AAAA,EACtE,YAAY;AAAA,IACX,eAAe;AAAA,MACd,gBAAgB;AAAA,QACf,UAAU;AAAA,MACX;AAAA,IACD;AAAA,IACA,SAAS,CAAC,YAAY;AAAA,MACrB,GAAG;AAAA,MACH,SAAS;AAAA,QACR,QAAQ;AAAA,QACR,sBAAsB;AAAA,QACtB,QAAQ;AAAA,QACR,QAAQ;AAAA,MACT;AAAA,MACA,WAAW;AAAA,QACV,QAAQ;AAAA,QACR,wBAAwB;AAAA,MACzB;AAAA,IACD;AAAA,IACA,WAAW,CAAC,YAAY;AAAA,MACvB,GAAG;AAAA,IACJ;AAAA,IACA,eAAe,CAAC,YAAY;AAAA,MAC3B,GAAG;AAAA,IACJ;AAAA,IACA,QAAQ,CAAC;AAAA,EACV;AACD,CAAC;;;AF3BD,IAAM,YAAY,uBAAW,QAAQ;AAAA,EACpC,cAAc;AAAA,EACd,KAAK;AACN,CAAC;AAED,IAAM,cAAc,uBAAW,QAAQ;AAAA,EACtC,cAAc;AAAA,EACd,KAAK,QAAQ,IAAI,mBAAmB;AAAA,EACnC,SAAS,CAAC,YAAY,QAAQ,uBAAuB,iBAAiB,eAAe;AACvF,CAAC;AAAA,IAGD,6CAAgC;AAAA,EAC/B,MAAM,CAAC,aAAa,SAAS;AAAA,EAC7B;AAAA,EACA;AAAA,EACA,UAAU;AAAA,IACT,gBAAgB,CAAC;AAAA,EAClB;AAAA,EACA,MAAM;AAAA,IACL,GAAG,iBAAK;AAAA,IACR,gBACC,QAAQ,IAAI,aAAa,eACtB;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,IACA,IACA,CAAC,0BAAyB,0BAAgC,0BAA0B,IAAI,gCAAoB,mBAAmB,CAAC;AAAA,EACrI;AAAA,EACA,UAAU;AAAA,IACT,uBAAuB;AAAA,EACxB;AACD,CAAC;",
  "names": ["import_sdk"]
}
